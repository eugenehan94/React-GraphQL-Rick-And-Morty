{"version":3,"sources":["_helper/constants.js","components/Hero.js","hooks/useFindCharacters.js","components/Cards.js","components/Footer.js","pages/Home.js","hooks/useFindCharacter.js","pages/Character.js","hooks/useFindLocations.js","components/LocationsCards.js","pages/Locations.js","hooks/useFindLocation.js","components/LocationCards.js","pages/Location.js","components/ScrollToTop.js","App.js","index.js"],"names":["BUTTON","Hero","react_default","a","createElement","Box","sx","bgcolor","pt","pb","Container","maxWidth","Typography","component","variant","align","color","gutterBottom","paragraph","Stack","direction","spacing","justifyContent","react_router_dom","to","style","textDecoration","Button","size","GET_CHARACTERS","gql","_templateObject","Object","taggedTemplateLiteral","useCharacter","_useQuery","useQuery","error","data","loading","Cards","py","Grid","container","characters","results","map","item","xs","sm","md","key","id","Card","height","display","flexDirection","CardMedia","image","alt","name","CardContent","flexGrow","gender","species","status","CardActions","concat","fullWidth","endIcon","ArrowForwardIos_default","Footer","p","Link","href","Date","getFullYear","Home","Fragment","components_Hero","components_Cards","components_Footer","GET_CHARACTER","useFindCharacter_templateObject","Character","_useFindCharacter","variables","useFindCharacter","useParams","characterId","src","character","width","borderRadius","startIcon","ArrowBack_default","marginTop","textAlign","episode","Paper","elevation","square","borderLeft","paddingLeft","paddingTop","paddingBottom","air_date","GET_LOCATIONS","useFindLocations_templateObject","LocationsCards","_useFindLocations","useFindLocations","locations","location","dimension","type","Locations","components_LocationsCards","GET_LOCATION","useFindLocation_templateObject","useFindLocation","LocationCards","params","locationId","mt","residents","result","Location","_useFindLocation","components_LocationCards","ScrollToTop","props","useLocation","useEffect","window","scrollTo","children","App","components_ScrollToTop","react_router","path","element","pages_Home","pages_Character","pages_Locations","pages_Location","client","ApolloClient","uri","cache","InMemoryCache","ReactDOM","render","StrictMode","ApolloProvider","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.f8b1b010.chunk.js","sourcesContent":["//Button Text\r\nexport const MORE_INFO = \"SEE MORE INFO\";\r\nexport const HERO_TITLE = \"Rick & Morty GraphQL Album\";\r\nexport const HERO_DESC =\r\n  \"Rick and Morty is an American adult animated science fiction sitcom created by Justin Roiland and Dan Harmon for Cartoon Network's nighttime programming block, Adult Swim. The series follows the misadventures of cynical mad scientist Rick Sanchez and his good-hearted, but fretful grandson Morty Smith, who split their time between domestic life and interdimensional adventures.\";\r\nexport const BUTTON ={\r\n    CHARACTERS: \"CHARACTERS\",\r\n    LOCATIONS: \"LOCATIONS\",\r\n    BACK_HOME: \" Back To Home Page\",\r\n    WHO_LIVES_HERE: \"Who Lives Here\"\r\n}","import React from \"react\";\r\nimport { Box, Container, Typography, Stack, Button } from \"@mui/material\";\r\nimport { HERO_TITLE, HERO_DESC, BUTTON } from \"../_helper/constants\";\r\nimport { Link } from \"react-router-dom\";\r\nconst Hero = () => {\r\n  return (\r\n    <Box\r\n      sx={{\r\n        bgcolor: \"background.paper\",\r\n        pt: 8,\r\n        pb: 6,\r\n      }}\r\n    >\r\n      <Container maxWidth=\"md\">\r\n        <Typography\r\n          component=\"h1\"\r\n          variant=\"h2\"\r\n          align=\"center\"\r\n          color=\"text.primary\"\r\n          gutterBottom\r\n        >\r\n          {HERO_TITLE}\r\n        </Typography>\r\n        <Typography\r\n          variant=\"h5\"\r\n          align=\"center\"\r\n          color=\"text.secondary\"\r\n          paragraph\r\n        >\r\n          {HERO_DESC}\r\n        </Typography>\r\n        <Stack\r\n          sx={{ pt: 4 }}\r\n          direction=\"row\"\r\n          spacing={2}\r\n          justifyContent=\"center\"\r\n        >\r\n          <Link to=\"/\" style={{ textDecoration: \"none\" }}>\r\n            <Button variant=\"contained\" size=\"large\">\r\n              {BUTTON.CHARACTERS}\r\n            </Button>\r\n          </Link>\r\n          <Link to=\"/locations\" style={{ textDecoration: \"none\" }}>\r\n            <Button variant=\"contained\" size=\"large\">\r\n              {BUTTON.LOCATIONS}\r\n            </Button>\r\n          </Link>\r\n        </Stack>\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Hero;\r\n","import {useQuery, gql} from \"@apollo/client\"\r\n\r\nconst GET_CHARACTERS = gql`\r\nquery {\r\n  characters{\r\n    results {\r\n      id\r\n      name\r\n      image\r\n      species\r\n      status\r\n      gender\r\n      origin {\r\n        name\r\n      }\r\n    }\r\n  }\r\n}\r\n`\r\n\r\nexport const useCharacter = () => {\r\n    const {error, data, loading} = useQuery(GET_CHARACTERS);\r\n\r\n    return {\r\n        error,\r\n        data,\r\n        loading\r\n    }\r\n}","import React from \"react\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardMedia,\r\n  CardContent,\r\n  Container,\r\n  Grid,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport { useCharacter } from \"../hooks/useFindCharacters\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ArrowForwardIosIcon from '@mui/icons-material/ArrowForwardIos';\r\nimport {MORE_INFO} from \"../_helper/constants\";\r\nconst Cards = () => {\r\n  const { data } = useCharacter();\r\n  return (\r\n    <Container sx={{ py: 8 }} maxWidth=\"lg\">\r\n      <Grid container spacing={4}>\r\n        {data.characters.results.map((results) => (\r\n          <Grid item xs={12} sm={6} md={4} key={results.id}>\r\n            <Card\r\n              sx={{\r\n                height: \"100%\",\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n              }}\r\n            >\r\n              <CardMedia\r\n                component=\"img\"\r\n                image={results.image}\r\n                alt={results.name}\r\n              />\r\n              <CardContent sx={{ flexGrow: 1 }}>\r\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                  {results.name}\r\n                </Typography>\r\n                <Grid container spacing={1}>\r\n                  <Grid item>\r\n                  <Typography>Gender: </Typography>\r\n                  <Typography>Species: </Typography>\r\n                  <Typography>Status: </Typography>\r\n                  </Grid>\r\n                  <Grid item>\r\n                <Typography>{results.gender}</Typography>\r\n                <Typography>{results.species}</Typography>\r\n                <Typography>{results.status}</Typography>\r\n                </Grid>\r\n                </Grid>\r\n              </CardContent>\r\n              <CardActions>\r\n                <Link to={`character/${results.id}`} style={{textDecoration: \"none\"}}>\r\n                  <Button fullWidth size=\"large\" endIcon={<ArrowForwardIosIcon/>}>{MORE_INFO}</Button>\r\n                </Link>\r\n              </CardActions>\r\n            </Card>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Cards;\r\n","import React from \"react\";\r\nimport { Box, Typography, Link } from \"@mui/material\";\r\nconst Footer = () => {\r\n  const Copyright = () => {\r\n    return (\r\n      <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\">\r\n        {\"Copyright © \"}\r\n        <Link color=\"inherit\" href=\"https://mui.com/\">\r\n          Your Website\r\n        </Link>\r\n        {new Date().getFullYear()}\r\n      </Typography>\r\n    );\r\n  };\r\n  return (\r\n    <Box sx={{ bgcolor: \"background.paper\", p: 6 }} component=\"footer\">\r\n      <Typography variant=\"h6\" align=\"center\" gutterBottom>\r\n        Footer\r\n      </Typography>\r\n      <Typography\r\n        variant=\"subtitle1\"\r\n        align=\"center\"\r\n        color=\"text.secondary\"\r\n        component=\"p\"\r\n      >\r\n        Something here to give the footer a purpose!\r\n      </Typography>\r\n      <Copyright />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport Hero from \"../components/Hero\";\r\nimport Cards from \"../components/Cards\";\r\nimport Footer from \"../components/Footer\";\r\nimport { useCharacter } from \"../hooks/useFindCharacters\";\r\nconst Home = () => {\r\n  // const {error, loading, data} = useCharacter();\r\n  const { loading } = useCharacter();\r\n  if (loading) {\r\n    return <></>;\r\n  }\r\n  return (\r\n    <div>\r\n      <Hero />\r\n      <Cards />\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { useQuery, gql } from \"@apollo/client\";\r\n\r\nconst GET_CHARACTER = gql`\r\n  query GetCharacter($id: ID!) {\r\n    character(id: $id) {\r\n      name\r\n      status\r\n      species\r\n      gender\r\n      image\r\n      origin {\r\n        name\r\n        dimension\r\n      }\r\n      location {\r\n        name\r\n      }\r\n      episode {\r\n        name\r\n        air_date\r\n        episode\r\n      }\r\n    }\r\n  }\r\n`;\r\nexport const useFindCharacter = (id) => {\r\n  const { data, error, loading } = useQuery(GET_CHARACTER, {\r\n    variables: {\r\n      id,\r\n    },\r\n  });\r\n  return {\r\n    data,\r\n    error,\r\n    loading,\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport Footer from \"../components/Footer\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useFindCharacter } from \"../hooks/useFindCharacter\";\r\nimport { Grid, Typography, Button, Paper } from \"@mui/material\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\r\nimport { BUTTON } from \"../_helper/constants\";\r\nconst Character = () => {\r\n  const params = useParams();\r\n  const { data, loading } = useFindCharacter(params.characterId);\r\n  if (loading) {\r\n    return <></>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Grid container spacing={5}>\r\n        <Grid item xs={12} sm={4}>\r\n          <img\r\n            src={data.character.image}\r\n            alt={data.character.name}\r\n            style={{ width: \"100%\", borderRadius: \"10px\" }}\r\n          />\r\n          <Grid container spacing={2}>\r\n            <Grid item>\r\n              <Typography>Name: </Typography>\r\n              <Typography>Gender: </Typography>\r\n              <Typography>Species: </Typography>\r\n              <Typography>Status: </Typography>\r\n            </Grid>\r\n            <Grid item>\r\n              <Typography> {data.character.name}</Typography>\r\n              <Typography>{data.character.gender}</Typography>\r\n              <Typography>{data.character.species}</Typography>\r\n              <Typography>{data.character.status}</Typography>\r\n            </Grid>\r\n          </Grid>\r\n          <Link to=\"/\" style={{ textDecoration: \"none\" }}>\r\n            <Button\r\n              fullWidth\r\n              startIcon={<ArrowBackIcon />}\r\n              variant=\"outlined\"\r\n              sx={{ marginTop: \"10px\" }}\r\n            >\r\n              {BUTTON.BACK_HOME}\r\n            </Button>\r\n          </Link>\r\n        </Grid>\r\n        <Grid item xs={12} sm={8}>\r\n          <Typography\r\n            variant=\"h2\"\r\n            sx={{ textAlign: { xs: \"center\", sm: \"left\" } }}\r\n          >\r\n            Episodes\r\n          </Typography>\r\n          {data.character.episode.map((episode) => (\r\n            <Paper\r\n              elevation={3}\r\n              square\r\n              sx={{\r\n                marginTop: \"10px\",\r\n                borderLeft: \"15px solid rgba(255,0,0,0.8)\",\r\n                paddingLeft: \"10px\",\r\n                paddingTop: \"5px\",\r\n                paddingBottom: \"5px\",\r\n              }}\r\n            >\r\n              <Typography sx={{ textAlign: { xs: \"center\", sm: \"left\" } }}>\r\n                {episode.episode}\r\n              </Typography>\r\n              <Typography sx={{ textAlign: { xs: \"center\", sm: \"left\" } }}>\r\n                {episode.name}\r\n              </Typography>\r\n              <Typography sx={{ textAlign: { xs: \"center\", sm: \"left\" } }}>\r\n                {episode.air_date}\r\n              </Typography>\r\n            </Paper>\r\n          ))}\r\n        </Grid>\r\n      </Grid>\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Character;\r\n","import {useQuery, gql} from \"@apollo/client\";\r\n\r\nconst GET_LOCATIONS = gql`\r\nquery {\r\n    locations{\r\n        results{\r\n            id\r\n            name\r\n            dimension\r\n            type\r\n        }\r\n    }\r\n}\r\n`\r\nexport const useFindLocations =() => {\r\n    const {error, data, loading} = useQuery(GET_LOCATIONS);\r\n\r\n    return {\r\n        error,\r\n        data,\r\n        loading\r\n    }\r\n}","import React from \"react\"\r\nimport {\r\n    Container,\r\n    Card,\r\n    CardContent,\r\n    CardActions,\r\n    Grid,\r\n    Button,\r\n    Typography,\r\n  } from \"@mui/material\";\r\n  import { BUTTON } from \"../_helper/constants\";\r\n  import { Link } from \"react-router-dom\";\r\n  import ArrowForwardIosIcon from '@mui/icons-material/ArrowForwardIos';\r\n  import { useFindLocations } from \"../hooks/useFindLocations\";\r\nconst LocationsCards = () => {\r\n    const { data, loading } = useFindLocations();\r\n    if (loading) {\r\n        return <></>;\r\n      }\r\n    return(\r\n        <Container sx={{ py: 8 }} maxWidth=\"lg\">\r\n        <Grid container spacing={3}>\r\n          {data.locations.results.map((location) => (\r\n            <Grid item xs={12} sm={6} md={3} key={location.id}>\r\n              <Card variant=\"outlined\">\r\n              <CardContent>\r\n                <Typography align=\"center\">{location.name}</Typography>\r\n                <Typography align=\"center\">{location.dimension}</Typography>\r\n                <Typography align=\"center\">{location.type}</Typography>\r\n              </CardContent>\r\n              <CardActions sx={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                <Link to={`/location/${location.id}`} style={{textDecoration: \"none\"}}>\r\n                  <Button size=\"small\" endIcon={<ArrowForwardIosIcon/>}>{BUTTON.WHO_LIVES_HERE}</Button>\r\n                </Link>\r\n              </CardActions>\r\n              </Card>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </Container>\r\n    )\r\n}\r\n\r\nexport default LocationsCards;","import React from \"react\";\r\nimport Hero from \"../components/Hero\";\r\nimport LocationsCards from \"../components/LocationsCards\"\r\nimport Footer from \"../components/Footer\";\r\n\r\nconst Locations = () => {\r\n  return (\r\n    <div>\r\n      <Hero />\r\n      <LocationsCards/>\r\n      <Footer/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Locations;\r\n","import { useQuery, gql } from \"@apollo/client\";\r\n\r\nconst GET_LOCATION = gql`\r\n  query getLocation($id: ID!) {\r\n    location(id: $id) {\r\n      name\r\n      residents {\r\n        id\r\n        name\r\n        image\r\n        species\r\n        gender\r\n        status\r\n      }\r\n    }\r\n  }\r\n`;\r\nexport const useFindLocation = (id) => {\r\n  const { data, error, loading } = useQuery(GET_LOCATION, {\r\n    variables: { id },\r\n  });\r\n  return { data, error, loading };\r\n};\r\n","import React from \"react\";\r\nimport { Button, Card, CardMedia, Grid, Typography } from \"@mui/material\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\nimport { useFindLocation } from \"../hooks/useFindLocation\";\r\nimport ArrowForwardIosIcon from \"@mui/icons-material/ArrowForwardIos\";\r\nimport { MORE_INFO } from \"../_helper/constants\";\r\nconst LocationCards = () => {\r\n  const params = useParams();\r\n  const { data} = useFindLocation(params.locationId);\r\n  return (\r\n    <Grid container spacing={4} sx={{ mt: 1 }}>\r\n      {data.location.residents.map((result) => (\r\n        <Grid item xs={12} sm={6} md={4} key={result.id}>\r\n          <Card\r\n            sx={{\r\n              height: \"100%\",\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n            }}\r\n          >\r\n            <CardMedia component=\"img\" image={result.image} alt={result.name} />\r\n            <Grid container spacing={2}>\r\n              <Grid item>\r\n                <Typography>Name: </Typography>\r\n                <Typography>Species: </Typography>\r\n                <Typography>Gender: </Typography>\r\n                <Typography>Status: </Typography>\r\n              </Grid>\r\n              <Grid item>\r\n                <Typography>{result.name}</Typography>\r\n                <Typography>{result.species}</Typography>\r\n                <Typography>{result.gender}</Typography>\r\n                <Typography>{result.status}</Typography>\r\n              </Grid>\r\n            </Grid>\r\n            <Link\r\n              to={`/character/${result.id}`}\r\n              style={{ textDecoration: \"none\" }}\r\n            >\r\n              <Button fullWidth endIcon={<ArrowForwardIosIcon />} size=\"large\">\r\n                {MORE_INFO}\r\n              </Button>\r\n            </Link>\r\n          </Card>\r\n        </Grid>\r\n      ))}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default LocationCards;\r\n","import React from \"react\";\r\nimport LocationCards from \"../components/LocationCards\";\r\nimport Footer from \"../components/Footer\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\nimport { useFindLocation } from \"../hooks/useFindLocation\";\r\nimport { Button, Container, Typography } from \"@mui/material\";\r\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\r\n\r\nconst Location = () => {\r\n  const params = useParams();\r\n  const { data, loading } = useFindLocation(params.locationId);\r\n  if (loading) {\r\n    return <></>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Typography align=\"center\" component=\"h1\" variant=\"h2\">\r\n        Residents of:\r\n      </Typography>\r\n      <Typography align=\"center\" component=\"h1\" variant=\"h2\">\r\n        {data.location.name}\r\n      </Typography>\r\n      <Container sx={{ py: 8 }} maxWidth=\"lg\">\r\n        <Link to=\"/locations\" style={{ textDecoration: \"none\" }}>\r\n          <Button startIcon={<ArrowBackIcon />} variant=\"outlined\">\r\n            Back to location\r\n          </Button>\r\n        </Link>\r\n        <LocationCards />\r\n      </Container>\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Location;\r\n","import React from \"react\"\r\nimport { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router\";\r\n\r\nconst ScrollToTop = (props) => {\r\n  const location = useLocation();\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [location]);\r\n\r\n  return <>{props.children}</>\r\n};\r\n\r\nexport default ScrollToTop;","import React from \"react\";\nimport { Routes, Route } from \"react-router-dom\";\nimport Home from \"./pages/Home\";\nimport Character from \"./pages/Character\";\nimport Locations from \"./pages/Locations\";\nimport Location from \"./pages/Location\";\nimport ScrollToTop from \"./components/ScrollToTop\";\n\nconst App = () => {\n  return (\n    <div>\n      <ScrollToTop>\n        <Routes>\n          <Route path=\"/\" element={<Home />} />\n          <Route path=\"character/:characterId\" element={<Character />} />\n          <Route path=\"/locations\" element={<Locations />} />\n          <Route path=\"/location/:locationId\" element={<Location />} />\n        </Routes>\n      </ScrollToTop>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { HashRouter } from \"react-router-dom\";\nimport { ApolloClient, ApolloProvider, InMemoryCache } from \"@apollo/client\";\n\nconst client = new ApolloClient({\n  uri: \"https://rickandmortyapi.com/graphql\",\n  cache: new InMemoryCache(),\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <ApolloProvider client={client}>\n      <HashRouter>\n        <App />\n      </HashRouter>\n    </ApolloProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}